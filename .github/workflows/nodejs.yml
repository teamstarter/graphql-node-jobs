name: Node CI

on: [push]
env:
  PORT: 3333
  DEBUG: '*,server:*,-babel,-pm2:*,-express:*,-eslint:*'
  PGUSER: gnj
  PGPASSWORD: gnj
  PGDATABASE: gnj-dev
  PGPORT: 5432
  PGHOST: localhost
jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.14.0]
    services:
      postgres:
        image: postgres:11.13
        env:
          POSTGRES_USER: gnj
          POSTGRES_PASSWORD: gnj
          POSTGRES_DB: gnj-dev
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --mount type=tmpfs,destination=/var/lib/postgresql/data --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: yarn install, build and test
        run: |
          yarn install
          yarn build
          yarn test
        env:
          NODE_ENV: test
          CI: true
